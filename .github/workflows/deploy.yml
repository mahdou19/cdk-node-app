name: CDK Deploy

on:
  push:
    branches: ["develop"]
env:
  REGISTRY: mahdou/node-example-1

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: |
          export TAG="$GITHUB_SHA"
          sudo docker build -t ${env.REGISTRY}:${TAG} .

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Publish docker image to Docker Hub.
        run: |
          export TAG="$GITHUB_SHA"
          sudo docker push ${env.REGISTRY}:${TAG}

  Deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Build & Deploy
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOSTNAME: ${{ secrets.EC2_HOST }}
          USER_NAME: ${{ secrets.EC2_USER }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            CONTAINER_NAME="app-node"
            sudo docker stop $CONTAINER_NAME || true
            echo "Hello from the remote server!"
            sudo docker run --rm -d --name $CONTAINER_NAME -p 80:80 mahdou/node-example-1
          '
